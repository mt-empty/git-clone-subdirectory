#!/usr/bin/env bash

if [ $# -lt 2 ]; then
  # >&2 echo "Usage: $0 <repository>  <directory> [path_to_subdirectory]"
  >&2 echo "Usage: $0 <repository> [path_to_subdirectory]"
  exit 1
fi

REPOSITORY=$1 # the repository to clone
# DIRECTORY=$2 # the directory to clone into
SUB_DIRECTORIES=( "${@:2}") # an array of directories


if git clone --filter=blob:none --no-checkout "$REPOSITORY" ; then 
  DIRECTORY=$(basename "$REPOSITORY" ".git")
  cd "$DIRECTORY" || exit 1
  git sparse-checkout init
  
  declare -a VALID_SUB_DIRECTORIES

  for SUBDIR in "${SUB_DIRECTORIES[@]}"
  do
    SP_FREE_SUBDIR=$(printf '%s' "$SUBDIR" | sed "s|^/||" | sed "s|/$||")
    if ! git ls-tree -r -d --name-only HEAD | grep -x -q "$SP_FREE_SUBDIR"; then
      echo Error: Could not find '"'"$SP_FREE_SUBDIR"'"' in the tree object
    else  #append if valid entry
      VALID_SUB_DIRECTORIES+=("$SUBDIR")
    fi
  done

  if [ ${#VALID_SUB_DIRECTORIES[@]} -ne 0 ]; then
    git sparse-checkout set "${VALID_SUB_DIRECTORIES[@]}"
  fi
  echo "All done";

fi

exit 0